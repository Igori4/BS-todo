{"version":3,"sources":["components/GetUserName.js","components/Time.js","components/MainGoal.js","components/Greeting.js","components/TodoList.js","components/Todo.js","App.js","index.js"],"names":["GetUserName","props","getName","handelSubmit","react_default","a","createElement","className","onSubmit","event","preventDefault","onChange","target","value","Time","time","hour","getHours","toString","min","getMinutes","length","MainGoal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getMainGoal","localStorage","setItem","JSON","stringify","setState","mainGoal","changeMainGoal","removeItem","state","goalOfDay","parse","getItem","_this2","onClick","title","type","maxLength","onKeyDown","keyCode","React","Component","Greeting","userName","tempName","Date","periodOfDay","handleInputChange","name","prevState","getPerionOfDay","period","console","log","userNameFomStor","intervalID","setInterval","tick","clearInterval","_this$state","components_Time","getPeriodOfDay","components_GetUserName","components_MainGoal","TodoList","todos","completedTodo","handleRemoveTodo","completedStyles","textDecoration","style","overflowY","maxHeight","map","todo","key","id","checked","completed","Todo","tempTodos","showTodos","handleChange","handleSubmit","todoObject","copyTodos","toConsumableArray","push","completedId","cloneTodos","find","todoId","updateTodos","filter","countOfUncompletedTodo","clearAllTodos","todoToggle","isShown","_this$state2","autoFocus","components_TodoList","App","components_Greeting","components_Todo","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.10141631.chunk.js","sourcesContent":["import React from 'react';\n\nfunction GetUserName(props) {\n    let { getName, handelSubmit } = props;\n    return (\n        <div className=\"modalWindow\">\n            <h1 className=\"first_meeting\">Welcome to your first ToDo List</h1>\n            <p>Please write your Name</p>\n            <form className=\"get_user_name_form\" onSubmit={event => {\n                event.preventDefault();\n                handelSubmit();\n            }}>\n                <input onChange={event => getName(event.target.value)} />\n            </form>\n        </div>\n    );\n};\n\n\nexport default GetUserName;","import React from 'react';\n\nfunction Time(props) {\n    let { time } = props;\n    let hour = time.getHours().toString();\n    let min = time.getMinutes().toString();\n\n    return (\n        <p className=\"time\">\n            {hour.length === 1 ? '0' + hour : hour}\n            :\n            {min.length === 1 ? '0' + min : min}\n        </p>\n    )\n}\n\nexport default Time;\n\n","import React from 'react';\n\nclass MainGoal extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      mainGoal: '',\n    }\n  }\n\n  componentDidMount() {\n    let goalOfDay = JSON.parse(localStorage.getItem(\"TodayGoal\"));\n\n    if (goalOfDay) {\n      this.setState({\n        mainGoal: goalOfDay\n      })\n    }\n  }\n\n  getMainGoal = (value) => {\n    localStorage.setItem(\"TodayGoal\", JSON.stringify(value))\n\n    return this.setState({ mainGoal: value })\n  }\n\n  changeMainGoal = () => {\n    localStorage.removeItem(\"TodayGoal\");\n    this.setState({mainGoal : ''})\n  }\n\n  render() {\n\n    let { mainGoal } = this.state;\n    return (\n      <div className=\"mainGoal\">\n        {mainGoal ?\n          <div className=\"todayGoalBlock\">\n            <h5>TODAY</h5>\n            <p>\n              {this.state.mainGoal}\n              <span\n                onClick={() => {this.changeMainGoal()} }\n                title=\"Change main goal\"\n                className=\"change_main_goal\">\n                &#8286;\n              </span>\n            </p>\n          </div>\n          :\n          <div className=\"asking_block\">\n            <p className=\"ask_for_goal\">Hi! What is your main focus for today?</p>\n            <input\n              className=\"inputGoalOfDay\"\n              type='text'\n              maxLength={30}\n              onKeyDown={(event) => {\n                if (event.keyCode === 13) {\n                  this.getMainGoal(event.target.value)\n                }\n              }}\n            />\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\n\nexport default MainGoal;","import React from 'react';\nimport GetUserName from './GetUserName';\nimport Time from './Time';\nimport MainGoal from './MainGoal';\n\nclass Greeting extends React.Component {\n\n  state = {\n    userName: '',\n    tempName: '',\n    time: new Date(),\n    periodOfDay: '',\n  };\n\n  componentDidMount() {\n    let userNameFomStor = JSON.parse(localStorage.getItem(\"userName\"));\n    this.getPerionOfDay(this.state.time.getHours());\n\n    this.intervalID = setInterval(\n      () => this.tick(),\n      1000\n    );\n\n    return (\n      userNameFomStor ? this.setState({ userName: userNameFomStor }) : ''\n    )\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  handleInputChange = (name) => {\n    this.setState({\n      tempName: name,\n    })\n  };\n\n  handelSubmit = () => {\n    localStorage.setItem(\"userName\", JSON.stringify(this.state.tempName))\n    this.setState((prevState => {\n      return { userName: prevState.tempName }\n    }));\n  };\n\n  tick() {\n    this.setState({\n      time: new Date()\n    });\n  }\n\n  getPerionOfDay = (time) => {\n    let period = '';\n\n    if (time >= 12 && time < 18) {\n      period = 'afternoon';\n    } else if (time >= 18 && time <= 23) {\n      period = 'evening';\n    } else if (time >= 0 && time <= 6) {\n      period = 'night';\n    } else {\n      period = 'morning';\n    };\n\n    if(time === 0) {\n      localStorage.removeItem('TodayGoal');\n    }\n    console.log(time)\n    this.setState({ periodOfDay: period });\n  };\n\n  render() {\n    let { userName, time } = this.state;\n\n    return (\n      <div className=\"greeting\">\n        {userName ?\n          <div className=\"clockTime\">\n            <Time time={time} getPeriodOfDay={this.getPerionOfDay} />\n            <p className=\"greeting\">Good {this.state.periodOfDay}, {userName}</p>\n          </div>\n          :\n          <GetUserName\n            getName={this.handleInputChange}\n            handelSubmit={this.handelSubmit}\n          />}\n          {userName ? <MainGoal /> : null}\n      </div>\n    );\n  };\n};\n\nexport default Greeting;\n","import React from 'react';\n\nfunction TodoList(props) {\n  let { todos, completedTodo, handleRemoveTodo } = props;\n\n  let completedStyles = {\n    textDecoration: \"line-through\"\n  }\n  let ulOverwfowStyles = { overflowY: \"scroll\", maxHeight: '185px' };\n\n  return (\n    <ul style={todos.length >= 7 ? ulOverwfowStyles : null}>\n      {todos.map(todo => {\n\n        return (\n          <li className=\"item\" key={todo.id} >\n            <input\n              className=\"todo_checkbox\"\n              type=\"checkbox\"\n              onChange={() => {\n                completedTodo(todo.id)\n              }}\n              checked={todo.completed}\n            />\n            <p style={todo.completed ? completedStyles : null} >\n              {todo.title}\n            </p>\n            <button onClick={() => {\n              handleRemoveTodo(todo.id)\n            }} className=\"removeTodo\">X</button>\n          </li>\n        )\n\n      })}\n    </ul>\n  )\n}\n\nexport default TodoList;","import React from 'react';\nimport TodoList from './TodoList';\n\nclass Todo extends React.Component {\n  state = {\n    tempTodos: '',\n    todos: [],\n    showTodos: false,\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      tempTodos: event.target.value,\n    })\n  }\n\n  handleSubmit = (event) => {\n    let { tempTodos, todos } = this.state;\n    let todoObject = {\n      title: tempTodos,\n      completed: false,\n      id: todos.length\n    };\n\n    let copyTodos = [...todos];\n    copyTodos.push(todoObject)\n\n    this.setState({\n      todos: copyTodos,\n      tempTodos: ''\n    })\n    event.preventDefault()\n  }\n\n  completedTodo = (completedId) => {\n    let cloneTodos = [...this.state.todos];\n    cloneTodos.find(todo => {\n      if (todo.id === completedId) {\n        return todo.completed === false ? todo.completed = true : todo.completed = false;\n      }\n    })\n    this.setState({\n      todos: cloneTodos\n    })\n\n  }\n\n  handleRemoveTodo = (todoId) => {\n    let copyTodos = [...this.state.todos];\n    let updateTodos = copyTodos.filter(todo => todo.id !== todoId);\n\n    this.setState({\n      todos: updateTodos,\n    })\n  }\n\n  countOfUncompletedTodo = (todos) => todos.filter(todo => !todo.completed).length;\n\n  clearAllTodos = () => this.setState({ todos: [] });\n\n  todoToggle = (isShown) => (\n    isShown ? this.setState({ showTodos: false }) : this.setState({ showTodos: true })\n  )\n\n  render() {\n    const { todos, tempTodos, showTodos } = this.state;\n    return (\n      <div className=\"todo\">\n        <button\n          className=\"show_todos\"\n          onClick={() => {\n            this.todoToggle(showTodos)\n          }}\n        >\n          TODO-LIST\n        </button>\n        {showTodos ?\n          <div className=\"form_block\" >\n            {todos.length ?\n              <button className=\"button_clear-all\" onClick={this.clearAllTodos}>clear all</button>\n              : null\n            }\n            <span\n              className=\"close_todo-button\"\n              onClick={() => this.todoToggle(showTodos)}\n            >\n              X\n            </span>\n            <form className=\"todo_form\" onSubmit={this.handleSubmit}>\n              <h3><span>{this.countOfUncompletedTodo(todos)}</span> TO DO</h3>\n              <input\n                title=\"maximum of characters is 17\"\n                maxLength=\"17\"\n                autoFocus\n                type=\"text\"\n                className=\"todo_input\"\n                value={tempTodos}\n                onChange={this.handleChange} />\n            </form>\n            {todos.length ?\n              <TodoList\n                handleRemoveTodo={this.handleRemoveTodo}\n                todos={todos}\n                completedTodo={this.completedTodo}\n              />\n              :\n              null}\n          </div>\n          :\n          null}\n      </div>\n    )\n  }\n};\n\nexport default Todo;","import React from 'react';\nimport './App.css';\nimport Greeting from './components/Greeting';\nimport Todo from './components/Todo';\n\n\nfunction App() {\n  return (\n    <main>\n      <Greeting />\n      <Todo />\n    </main>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}